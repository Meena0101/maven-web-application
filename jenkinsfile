node{
    def MavenHome = tool name:"maven3.8.4"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    echo "Job name is : ${env.JOB_NAME}"
    echo "Node name is : ${env.NODE_NAME}"
    echo "Build number is : ${env.BUILD_NUMBER}"
   try{
   stage('checkoutcode')
    {
        git branch: 'development', credentialsId: '08caeac2-7224-457e-ac0b-d6b4e6e81a8f', url: 'https://github.com/Meena0101/maven-web-application.git'
    }
    stage('Build')
    {
        sh "${MavenHome}/bin/mvn clean package" 
    }
    stage('ExecuteSonarQubeReport')
    {
        sh "${MavenHome}/bin/mvn sonar:sonar"
    }
    stage('UploadArtifactsFromNexus')
    {
       sh "${MavenHome}/bin/mvn deploy" 
    }
    stage('deploy')
    {
        sshagent(['ba04909f-1fbf-4a0c-bf7c-ccc6a8eb7877']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.235.238.19:/opt/apache-tomcat-9.0.63/webapps"
        }        

    }
   }catch(e){
   currentBuild.result="FAILED"
   throw e
   }
   finally {
   SendSlackNotification (currentBuild.result)
   }
}
def sendslagnotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
